@using MedsNotifier.Data.Models.ViewModels
@using MedsNotifier.Services
@inject MedsNotifier.Services.IAuthorizationService AuthorizationService
@using Microsoft.AspNetCore.Http;
@inject NavigationManager NavigationManager
@page "/register"

<div class="auth-form-body">
    <div class="login-form-box">
        <h3 class="reg-header">Register</h3>
        <EditForm Model="registerModel" OnValidSubmit="@HandleSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <p>@message</p>
            <div class="input-fields">
                <label for="email">Email</label><InputText class="text-field" id="email" placeholder="Email" @bind-Value="registerModel.Email" />
                <label for="username">Username</label><InputText class="text-field" id="username" placeholder="Username" @bind-Value="registerModel.Username" />
                <label for="age">Age</label> <InputNumber class="text-field" id="age" placeholder="Age" @bind-Value="registerModel.Age" />
                <label for="weight">Weight</label><InputNumber class="text-field" id="weight" placeholder="Weight" @bind-Value="registerModel.Weight" />
                <label for="height">Height</label><InputNumber class="text-field" id="height" placeholder="Height" @bind-Value="registerModel.Height" />
                <label for="password">Password</label><InputText class="text-field" id="password" type="password" placeholder="Password" @bind-Value="registerModel.Password" />
            </div>

            <button class="submit-button" type="submit">Register</button>
            <p class="warning">Such parameters as Height, Weight and Age are optional, but they can help us to analyze your health better.</p>
        </EditForm>
    </div>
</div>


@code {
    private RegisterViewModel registerModel = new();
    private string message;
    private string token = "Bearer ";

    [Inject]
    public LocalStorageService LocalStorageService { get; set; }

    private async Task HandleSubmit()
    {
        var result = await AuthorizationService.Register(registerModel);

        if (result.Succeeded)
        {
            token += result.Token;

            await LocalStorageService.SetItem<string>("Authorization", token);
            NavigationManager.NavigateTo("/home", true);

        }
        else message = result.Message;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (!firstRender) message = "";
    }
}
