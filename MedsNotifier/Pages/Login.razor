@using MedsNotifier.Data.Models.ViewModels
@using MedsNotifier.Services
@inject AccountService AccountService
@page "/"

<div class="auth-form-body">
    <div class="login-form-box">
        <h3>Login</h3>

        <EditForm Model="@loginModel" OnValidSubmit="@HandleSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="input-fields">
            <InputText id="email" class="text-field" placeholder="Email" @bind-Value="loginModel.Email" />
            <InputText id="password" class="text-field" type="password" placeholder="Password" @bind-Value="loginModel.Password" />
            </div>
            @if (message != null)
            {<p>@message</p>}
            <button class="submit-button" type="submit"> Login</button>
        </EditForm>

        <NavLink class="crt-acc" href="register" Match="NavLinkMatch.All">Create Account</NavLink>
    </div>
</div>



@code {
    private LoginViewModel loginModel = new();
    private string message { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }


    [Inject]
    public NavigationManager NavigationManager { get; set; }

    private async Task HandleSubmit()
    {
        //var result = await AccountService.Login(loginModel);
        //if (result.Succeeded) message = "The login or password is incorrect";
        NavigationManager.NavigateTo("home", true);
    }

    protected override void OnInitialized()
    {

    }
}
